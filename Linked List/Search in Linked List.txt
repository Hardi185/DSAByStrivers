PROBLEM:
Given a linked list of n nodes and a key , the task is to check if the key is present in the linked list or not.

Example:

Input:
n = 4
1->2->3->4
Key = 3
Output:
True
Explanation:
3 is present in Linked List, so the function returns true.
Your Task:
Your task is to complete the given function searchKey(), which takes a head reference and key as Input and returns true or false boolean value by checking the key is present or not in the linked list.
__________________________________________________________________________________________________________________________
CODE:
class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class Solution {
    static boolean searchKey(int n, Node head, int key) {
        if (head == null) {
            return false;
        }
        
        Node current = head;
        for (int i = 0; i < n; i++) {
            if (current.data == key) {
                return true;
            }
            current = current.next;
        }
        
        return false;
    }
}

public class Main {
    public static void main(String[] args) {
        // Creating a linked list: 1 -> 2 -> 3 -> 4 -> 5
        Node head = new Node(1);
        head.next = new Node(2);
        head.next.next = new Node(3);
        head.next.next.next = new Node(4);
        head.next.next.next.next = new Node(5);

        // Key to search in the linked list
        int key = 3;

        // Calling searchKey method from Solution class
        boolean found = Solution.searchKey(5, head, key);

        // Printing the result
        if (found) {
            System.out.println("Key " + key + " is found in the linked list.");
        } else {
            System.out.println("Key " + key + " is not found in the linked list.");
        }
    }
}
__________________________________________________________________________________________________________________________
EXPLANATION:

1)Check if the Linked List is Empty
2)Initialize the Current Node
3)Iterate Through the Linked List:
  -->If key is found return true
  -->else update current to next 
4)Return False if Key Not Found
