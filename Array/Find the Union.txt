PROBLEM:
Given two sorted arrays a[] and b[], where each array may contain duplicate elements , the task is to return the elements in the union of the two arrays in sorted order.

Union of two arrays can be defined as the set containing distinct common elements that are present in either of the arrays.
Examples:

Input: a[] = [1, 2, 3, 4, 5], b[] = [1, 2, 3, 6, 7]
Output: 1 2 3 4 5 6 7
Explanation: Distinct elements including both the arrays are: 1 2 3 4 5 6 7.
Input: a[] = [2, 2, 3, 4, 5], b[] = [1, 1, 2, 3, 4]
Output: 1 2 3 4 5
Explanation: Distinct elements including both the arrays are: 1 2 3 4 5.
Input: a[] = [1, 1, 1, 1, 1], b[] = [2, 2, 2, 2, 2]
Output: 1 2
Explanation: Distinct elements including both the arrays are: 1 2.
________________________________________________________________________________________________________________________________

CODE:

class Solution {
    public List<Integer> findUnion(int[] a, int[] b) {
        List<Integer> result = new ArrayList<>();
        int i = 0, j = 0;
        
        while (i < a.length && j < b.length) {
            // Skip duplicates in the first array
            while (i > 0 && i < a.length && a[i] == a[i - 1]) {
                i++;
            }
            // Skip duplicates in the second array
            while (j > 0 && j < b.length && b[j] == b[j - 1]) {
                j++;
            }

            if (i < a.length && j < b.length) {
                if (a[i] < b[j]) {
                    result.add(a[i]);
                    i++;
                } else if (a[i] > b[j]) {
                    result.add(b[j]);
                    j++;
                } else {
                    // a[i] == b[j]
                    result.add(a[i]);
                    i++;
                    j++;
                }
            }
        }
        
        // Add remaining elements from array a
        while (i < a.length) {
            if (i == 0 || a[i] != a[i - 1]) { // Check for duplicates
                result.add(a[i]);
            }
            i++;
        }
        
        // Add remaining elements from array b
        while (j < b.length) {
            if (j == 0 || b[j] != b[j - 1]) { // Check for duplicates
                result.add(b[j]);
            }
            j++;
        }
        
        return result;
    }
}
_______________________________________________________________________________________________________________________

NOTES:
1)Initialize index i for array 'a' and j for array 'b', and have ArrayList for result
2)Loop untill we reach array length of either of the array
Increment count for i and j, if adjacents are same(duplicate).
Perform comparision and add it to result
3)Add remaining elements from array a(add check for duplication as well), do the same for array b


